version: "3"

services:
  api:
    container_name: back-end
    build: .
    depends_on:
      - redis
      - db
    command: npm start
    restart: always
    working_dir: /usr/src/app
    environment:
      PORT: "4000"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ENV: "dev"
      SECRET: insertyoursalthere
      # db config
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: db

    ports:
      - "4000:4000"
    volumes:
      - ./:/usr/src/app
      - /app/node_modules
    links:
      - redis
      - db

  db: # also this is the server name in the adminer
    image: postgres:12-alpine
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password

    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    ports:
      - "8889:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      # clean all containers WARNING -- CLEANS ALL CONTAINERS
      # docker volume rm `docker volume ls -q -f dangling=true`

volumes:
  postgres-data:
  redis-data:
